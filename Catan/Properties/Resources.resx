<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Item_Brick" xml:space="preserve">
    <value>Brick</value>
  </data>
  <data name="Item_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Item_Desert" xml:space="preserve">
    <value>Desert</value>
  </data>
  <data name="Item_Grain" xml:space="preserve">
    <value>Grain</value>
  </data>
  <data name="Item_Lumber" xml:space="preserve">
    <value>Lumber</value>
  </data>
  <data name="Item_Ore" xml:space="preserve">
    <value>Ore</value>
  </data>
  <data name="Item_Road" xml:space="preserve">
    <value>Road</value>
  </data>
  <data name="Item_Wool" xml:space="preserve">
    <value>Wool</value>
  </data>
  <data name="Player_PlayerColor_Blue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="Player_PlayerColor_Orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="Player_PlayerColor_Red" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="Player_PlayerColor_White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="Presenter_KeyValueFormat" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="Presenter_DisplayPlayerVictory_VictoryTextFormat" xml:space="preserve">
    <value>{0} Wins!</value>
  </data>
  <data name="Presenter_PromptUser_UserMessageFormat" xml:space="preserve">
    <value>{0}, {1}</value>
  </data>
  <data name="Build_Instruction" xml:space="preserve">
    <value>begin building or end turn.</value>
  </data>
  <data name="Build_CannotAfford" xml:space="preserve">
    <value>choose something you can afford! Begin building or end turn.</value>
  </data>
  <data name="MoveRobber_Instruction" xml:space="preserve">
    <value>select a hex to place the Robber on.</value>
  </data>
  <data name="MoveRobber_SameHexNotAllowed" xml:space="preserve">
    <value>select a DIFFERENT hex to place the Robber on.</value>
  </data>
  <data name="PlaceInitialRoad_Instruction" xml:space="preserve">
    <value>place a road next to that settlement.</value>
  </data>
  <data name="PlaceSettlement_Instruction" xml:space="preserve">
    <value>place a settlement.</value>
  </data>
  <data name="Item_Settlement" xml:space="preserve">
    <value>settlement</value>
  </data>
  <data name="PlaceRoad_Instruction" xml:space="preserve">
    <value>place a road.</value>
  </data>
  <data name="PlayMonopoly_Instruction" xml:space="preserve">
    <value>select a hex for the resource you would like to steal from everyone.</value>
  </data>
  <data name="PlayYearOfPlenty_Instruction" xml:space="preserve">
    <value>select a hex for the first resource you would like to receive.</value>
  </data>
  <data name="PlayYearOfPlenty_OutOfAllResources" xml:space="preserve">
    <value>sorry, there are no remaining resources.</value>
  </data>
  <data name="PlayYearOfPlenty_OutOfAResource" xml:space="preserve">
    <value>sorry, that resource has run out. Select a different hex for a resource you would like to receive.</value>
  </data>
  <data name="PlaceCity_Instruction" xml:space="preserve">
    <value>place a city.</value>
  </data>
  <data name="Trade_Instruction" xml:space="preserve">
    <value>select harbor or 4:1 to trade or move to build phase</value>
  </data>
  <data name="RollDice_Instruction" xml:space="preserve">
    <value>roll dice.</value>
  </data>
  <data name="Rob_Instruction" xml:space="preserve">
    <value>select an adjacent city or settlement to steal a resource from.</value>
  </data>
  <data name="Rob_CannotRobSelf" xml:space="preserve">
    <value>stealing from yourself is not a valid choice! Select an adjacent city or settlement!</value>
  </data>
  <data name="Rob_MustSelectCity" xml:space="preserve">
    <value>there is no city or settlement there! Select an adjacent city or settlement!</value>
  </data>
  <data name="Rob_MustBeAdjacent" xml:space="preserve">
    <value>that city is not adjacent! Select an adjacent city or settlement!</value>
  </data>
  <data name="Rob_PlayerIsBroke" xml:space="preserve">
    <value>what a pity! that player didn't have any resources.</value>
  </data>
  <data name="Item_KnightCard" xml:space="preserve">
    <value>Knight Card</value>
  </data>
  <data name="Item_MonopolyCard" xml:space="preserve">
    <value>Monopoly Card</value>
  </data>
  <data name="Item_RoadBuildingCard" xml:space="preserve">
    <value>Road Building Card</value>
  </data>
  <data name="Item_VictoryPointCard" xml:space="preserve">
    <value>Victory Point Card</value>
  </data>
  <data name="Item_YearOfPlentyCard" xml:space="preserve">
    <value>Year of Plenty Card</value>
  </data>
  <data name="PlayYearOfPlenty_Invalid" xml:space="preserve">
    <value>You must select a hex corresponding to the resource you wish to receive (Desert doesn't count!).</value>
  </data>
  <data name="PlayRoadBuilding_NoRoads" xml:space="preserve">
    <value>You're out of roads!</value>
  </data>
  <data name="PlaceSettlement_Fail" xml:space="preserve">
    <value>Your settlement must be placed next to a road you own, at least two roads away from another settlement.</value>
  </data>
  <data name="Build_CannotPlace" xml:space="preserve">
    <value>sorry, there are no valid places for you to build that. Begin building or end turn.</value>
  </data>
  <data name="TurnState_GeneralInvalidInput" xml:space="preserve">
    <value>You have selected an invalid action or target for an action. Please try again.</value>
  </data>
  <data name="PlaceCity_Failed" xml:space="preserve">
    <value>You must select a city you own to upgrade.</value>
  </data>
  <data name="PlaceRoad_Failed" xml:space="preserve">
    <value>Your road must be adjacent to one of your cities, settlements, or roads, and cannot cross other player's settlements or cities.</value>
  </data>
  <data name="DevCard_NoCard" xml:space="preserve">
    <value>You do not have any of that kind of card to play!</value>
  </data>
  <data name="Item_LargestArmyCard" xml:space="preserve">
    <value>Largest Army Owner:</value>
  </data>
  <data name="Item_LongestRoadCard" xml:space="preserve">
    <value>Longest Road Owner:</value>
  </data>
  <data name="ActionType_Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="ActionType_RequestCity" xml:space="preserve">
    <value>Build City</value>
  </data>
  <data name="ActionType_RequestRoad" xml:space="preserve">
    <value>Build Road</value>
  </data>
  <data name="ActionType_RequestSettlement" xml:space="preserve">
    <value>Build Settlement</value>
  </data>
  <data name="ActionType_RequestDevCard" xml:space="preserve">
    <value>Buy Dev Card</value>
  </data>
  <data name="ActionType_EndTurn" xml:space="preserve">
    <value>End Turn</value>
  </data>
  <data name="ActionType_PlayDevCard" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="ActionType_RollDice" xml:space="preserve">
    <value>Roll Dice</value>
  </data>
  <data name="ActionType_RequestTradeBasic" xml:space="preserve">
    <value>Trade 4:1</value>
  </data>
  <data name="Player_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DoTrade_Instruction" xml:space="preserve">
    <value>Select the hex of the type of resource you would like to trade away</value>
  </data>
  <data name="Trade_NotEnoughToTrade" xml:space="preserve">
    <value>sorry, you don't have enough resources to trade that way.</value>
  </data>
  <data name="DoTrade_SelectWant" xml:space="preserve">
    <value>select the hex of the a different resource type you would like to receive</value>
  </data>
  <data name="DoTrade_NotEnough" xml:space="preserve">
    <value>sorry, you don't have enough of that to trade. Select the hex of the type of resource you would like to trade away.</value>
  </data>
  <data name="Trade_BankCantTrade" xml:space="preserve">
    <value>sorry, the bank is out of resources. Move to build phase.</value>
  </data>
  <data name="StartButton" xml:space="preserve">
    <value>Start!</value>
  </data>
  <data name="DevCard_AlreadyPlayed" xml:space="preserve">
    <value>You have already played a dev card this turn!</value>
  </data>
  <data name="DevCard_BoughtThisTurn" xml:space="preserve">
    <value>You cannot play a dev card that you bought this turn!</value>
  </data>
  <data name="PlaceInitialRoad_NotAdjacent" xml:space="preserve">
    <value>Your road must be placed next to your new settlement.</value>
  </data>
  <data name="PlaceRoad_AlreadyOccupied" xml:space="preserve">
    <value>You cannot place a road there because is already occupied.</value>
  </data>
  <data name="PlaceRoad_NotPath" xml:space="preserve">
    <value>That is not a path!</value>
  </data>
  <data name="PlaceInitialSettlement_InvalidLocation" xml:space="preserve">
    <value>your settlement must be at least two roads away from other settlements.</value>
  </data>
  <data name="PlaceInitialSettlement_NotIntersection" xml:space="preserve">
    <value>settlements must be placed on intersections.</value>
  </data>
  <data name="PlayKnightCard_ReceivedLargestArmy" xml:space="preserve">
    <value>You have received the Largest Army Card.</value>
  </data>
  <data name="PlayRoadBuilding_SecondInstruction" xml:space="preserve">
    <value>place the second road.</value>
  </data>
  <data name="PlayYearOfPlenty_SecondInstruction" xml:space="preserve">
    <value>select a hex for the second resource you would like to receive.</value>
  </data>
  <data name="Trade_InvalidHarbor" xml:space="preserve">
    <value>Sorry, you don't have a settlement or city next to that harbor.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Settlers of Catan</value>
  </data>
</root>